!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("hotkeys-js")):"function"==typeof define&&define.amd?define(["hotkeys-js"],e):"object"==typeof exports?exports.uxshot=e(require("hotkeys-js")):n.uxshot=e(n["hotkeys-js"])}(this,function(__WEBPACK_EXTERNAL_MODULE__2__){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return n[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)t.d(r,o,function(e){return n[e]}.bind(null,o));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(n,e,t){t(1),n.exports=t(3)},function(module,exports,__webpack_require__){var factory;factory=function(__WEBPACK_EXTERNAL_MODULE_hotkeys_js__){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return n[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)t.d(r,o,function(e){return n[e]}.bind(null,o));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./src/index.js")}({"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("const { default: hotkeys } = __webpack_require__(/*! hotkeys-js */ \"hotkeys-js\");\n\nlet isRecording = false;\nlet mediaType;\n\nfunction init({\n  videoKey = 'ctrl+r',\n  screenshotKey = 'ctrl+s',\n  description: descriptionCallback,\n} = {}) {\n  hotkeys(videoKey, function(event, handler) {\n    if (isRecording) {\n      stopCapture();\n    } else {\n      startCapture('video');\n    }\n  });\n\n  hotkeys(screenshotKey, async function(event, handler) {\n    await startCapture('image');\n    setTimeout(async () => {\n      const img = getVideoImage(0);\n      if (img.src === 'data:,') return;\n      stopCapture('image');\n      const res = await fetch(img.src);\n      const blob = await res.blob();\n      upload(blob);\n    }, 1000);\n  });\n\n  let recorder;\n  let stream;\n  let chunks = [];\n  const video = document.createElement('video');\n  video.setAttribute('autoplay', true);\n\n  document.addEventListener('DOMContentLoaded', () => {\n    // document.body.appendChild(video)\n  });\n\n  function stopCapture(evt) {\n    if (!isRecording) return;\n    isRecording = false;\n    if (recorder) {\n      recorder.stop();\n      recorder = null;\n      stream.getTracks().forEach(track => track.stop());\n      stream = null;\n      chunks = [];\n      if (mediaType === 'video') {\n        // window.onbeforeunload = null;\n      }\n    }\n  }\n\n  function handleCloseBanner() {\n    const banner = document.getElementById('uxshot-banner');\n    banner.remove();\n  }\n\n  async function upload(data) {\n    // Build formData object.\n    let formData = new FormData();\n    formData.append('mediaType', mediaType);\n    formData.append('media', data);\n\n    let description;\n    if (descriptionCallback) {\n      description = await descriptionCallback();\n      formData.append('description', description);\n    }\n\n    // const res = await fetch(\"http://localhost:3000/upload\",\n    const res = await fetch('https://uxshot.com/upload', {\n      body: formData,\n      method: 'post',\n    });\n\n    const json = await res.json();\n\n    const url = json.data.url;\n\n    try {\n      await navigator.clipboard.writeText(url);\n    } catch (err) {}\n\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.setAttribute('readonly', true);\n    input.value = url;\n    Object.assign(input.style, {\n      borderRadius: '3px',\n      outline: 'none',\n      border: 'none',\n      width: '150px',\n      marginRight: '5px',\n    });\n\n    const copyButton = document.createElement('button');\n    copyButton.innerHTML = 'Copy';\n    Object.assign(copyButton.style, {});\n\n    const banner = document.createElement('div');\n    banner.id = 'uxshot-banner';\n    Object.assign(banner.style, {\n      position: 'fixed',\n      top: '10px',\n      right: '10px',\n      background: 'white',\n      borderRadius: '5px',\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: 'sans-serif',\n      padding: '10px 15px',\n      padding: '10px 15px',\n      border: '1px solid #cacaca',\n    });\n\n    copyButton.addEventListener('click', () => {\n      input.select();\n      document.execCommand('copy');\n      banner.remove();\n    });\n\n    const closeButton = document.createElement('button');\n    closeButton.addEventListener('click', handleCloseBanner);\n    closeButton.innerHTML = '&times;';\n    Object.assign(closeButton.style, {\n      background: 'transparent',\n      color: 'white',\n      border: 'none',\n      fontSize: '14px',\n      marginLeft: '5px',\n    });\n\n    banner.appendChild(input);\n    banner.appendChild(copyButton);\n    // banner.appendChild(closeButton);\n\n    document.body.appendChild(banner);\n  }\n\n  function screenCap() {\n    if (navigator.getDisplayMedia) {\n      return navigator.getDisplayMedia({ video: true, audio: true });\n    } else if (\n      navigator.mediaDevices &&\n      navigator.mediaDevices.getDisplayMedia\n    ) {\n      return navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: false,\n      });\n    } else {\n      throw new Error('getDisplayMedia API is not supported in this browser');\n    }\n  }\n\n  async function startCapture(type) {\n    const banner = document.getElementById('uxshot-banner');\n    if (banner) banner.remove();\n\n    mediaType = type;\n    isRecording = true;\n\n    if (mediaType === 'video') {\n      // window.onbeforeunload = function(evt) {\n      //   // Cancel the event\n      //   evt.preventDefault();\n      //   // Chrome requires returnValue to be set\n      //   evt.returnValue = '';\n      // };\n    }\n\n    try {\n      stream = await screenCap();\n      const track = stream.getTracks()[0];\n      const settings = track.getSettings && track.getSettings();\n      if (!settings.displaySurface || settings.displaySurface === 'monitor') {\n        // window.open(window.location.href)\n      }\n      video.srcObject = stream;\n\n      const mimeType = 'video/webm; codecs=vp8';\n      recorder = new MediaRecorder(stream, { mimeType });\n      recorder.ondataavailable = function(event) {\n        if (typeof event.data === 'undefined') return;\n        if (event.data.size === 0) return;\n        chunks.push(event.data);\n      };\n      recorder.addEventListener('stop', () => {\n        const blob = new Blob(chunks, { type: 'video/webm' });\n        if (mediaType === 'video') {\n          upload(blob);\n        }\n      });\n\n      recorder.addEventListener('start', () => {\n        // upload();\n      });\n      recorder.start();\n\n      stream.addEventListener('inactive', e => {\n        if (isRecording && mediaType === 'video') {\n          stopCapture();\n        }\n      });\n\n      stream.addEventListener('active', e => {\n        // callback();\n        // console.log('active');\n      });\n      stream.addEventListener('addtrack', e => {\n        // console.log('add');\n        // callback();\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  function getVideoImage(secs) {\n    video.currentTime = secs;\n    var canvas = document.createElement('canvas');\n    canvas.height = video.videoHeight;\n    canvas.width = video.videoWidth;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    var img = new Image();\n    img.src = canvas.toDataURL();\n    return img;\n  }\n}\n\nmodule.exports = init;\n\n\n//# sourceURL=webpack://uxshot/./src/index.js?")},"hotkeys-js":
/*!*****************************!*\
  !*** external "hotkeys-js" ***!
  \*****************************/
/*! no static exports found */function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE_hotkeys_js__;\n\n//# sourceURL=webpack://uxshot/external_%22hotkeys-js%22?")}})},module.exports=factory(__webpack_require__(2))},function(n,e){n.exports=__WEBPACK_EXTERNAL_MODULE__2__},function(n,e,t){(function(e){const r=t(4);n.exports={entry:"./src/index.js",mode:"production",output:{filename:"uxshot.js",path:r.resolve(e,"dist"),library:"uxshot",libraryTarget:"umd",globalObject:"this"},externals:{"hotkeys-js":"hotkeys-js"}}}).call(this,"/")},function(n,e,t){(function(n){function t(n,e){for(var t=0,r=n.length-1;r>=0;r--){var o=n[r];"."===o?n.splice(r,1):".."===o?(n.splice(r,1),t++):t&&(n.splice(r,1),t--)}if(e)for(;t--;t)n.unshift("..");return n}function r(n,e){if(n.filter)return n.filter(e);for(var t=[],r=0;r<n.length;r++)e(n[r],r,n)&&t.push(n[r]);return t}e.resolve=function(){for(var e="",o=!1,i=arguments.length-1;i>=-1&&!o;i--){var a=i>=0?arguments[i]:n.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(e=a+"/"+e,o="/"===a.charAt(0))}return(o?"/":"")+(e=t(r(e.split("/"),function(n){return!!n}),!o).join("/"))||"."},e.normalize=function(n){var i=e.isAbsolute(n),a="/"===o(n,-1);return(n=t(r(n.split("/"),function(n){return!!n}),!i).join("/"))||i||(n="."),n&&a&&(n+="/"),(i?"/":"")+n},e.isAbsolute=function(n){return"/"===n.charAt(0)},e.join=function(){var n=Array.prototype.slice.call(arguments,0);return e.normalize(r(n,function(n,e){if("string"!=typeof n)throw new TypeError("Arguments to path.join must be strings");return n}).join("/"))},e.relative=function(n,t){function r(n){for(var e=0;e<n.length&&""===n[e];e++);for(var t=n.length-1;t>=0&&""===n[t];t--);return e>t?[]:n.slice(e,t-e+1)}n=e.resolve(n).substr(1),t=e.resolve(t).substr(1);for(var o=r(n.split("/")),i=r(t.split("/")),a=Math.min(o.length,i.length),s=a,c=0;c<a;c++)if(o[c]!==i[c]){s=c;break}var u=[];for(c=s;c<o.length;c++)u.push("..");return(u=u.concat(i.slice(s))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(n){if("string"!=typeof n&&(n+=""),0===n.length)return".";for(var e=n.charCodeAt(0),t=47===e,r=-1,o=!0,i=n.length-1;i>=1;--i)if(47===(e=n.charCodeAt(i))){if(!o){r=i;break}}else o=!1;return-1===r?t?"/":".":t&&1===r?"/":n.slice(0,r)},e.basename=function(n,e){var t=function(n){"string"!=typeof n&&(n+="");var e,t=0,r=-1,o=!0;for(e=n.length-1;e>=0;--e)if(47===n.charCodeAt(e)){if(!o){t=e+1;break}}else-1===r&&(o=!1,r=e+1);return-1===r?"":n.slice(t,r)}(n);return e&&t.substr(-1*e.length)===e&&(t=t.substr(0,t.length-e.length)),t},e.extname=function(n){"string"!=typeof n&&(n+="");for(var e=-1,t=0,r=-1,o=!0,i=0,a=n.length-1;a>=0;--a){var s=n.charCodeAt(a);if(47!==s)-1===r&&(o=!1,r=a+1),46===s?-1===e?e=a:1!==i&&(i=1):-1!==e&&(i=-1);else if(!o){t=a+1;break}}return-1===e||-1===r||0===i||1===i&&e===r-1&&e===t+1?"":n.slice(e,r)};var o="b"==="ab".substr(-1)?function(n,e,t){return n.substr(e,t)}:function(n,e,t){return e<0&&(e=n.length+e),n.substr(e,t)}}).call(this,t(5))},function(n,e){var t,r,o=n.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(n){if(t===setTimeout)return setTimeout(n,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(n,0);try{return t(n,0)}catch(e){try{return t.call(null,n,0)}catch(e){return t.call(this,n,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:i}catch(n){t=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(n){r=a}}();var c,u=[],l=!1,d=-1;function f(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&p())}function p(){if(!l){var n=s(f);l=!0;for(var e=u.length;e;){for(c=u,u=[];++d<e;)c&&c[d].run();d=-1,e=u.length}c=null,l=!1,function(n){if(r===clearTimeout)return clearTimeout(n);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(n);try{r(n)}catch(e){try{return r.call(null,n)}catch(e){return r.call(this,n)}}}(n)}}function m(n,e){this.fun=n,this.array=e}function h(){}o.nextTick=function(n){var e=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)e[t-1]=arguments[t];u.push(new m(n,e)),1!==u.length||l||s(p)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=h,o.addListener=h,o.once=h,o.off=h,o.removeListener=h,o.removeAllListeners=h,o.emit=h,o.prependListener=h,o.prependOnceListener=h,o.listeners=function(n){return[]},o.binding=function(n){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(n){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}}])});